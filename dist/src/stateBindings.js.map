{"version":3,"sources":["stateBindings.js"],"names":[],"mappings":";;;;IAAO,SAAS,wCAAM,WAAW;;yBACM,aAAa;;IAA3C,WAAW,cAAX,WAAW;IAAE,SAAS,cAAT,SAAS;;;;;;;;AAQ/B,IAAM,aAAa,GAAG,uBAAS,UAAU,EAAE;AAC1C,KAAI,OAAO,UAAU,AAAC,IAAI,UAAU,EACnC,MAAM,IAAI,KAAK,CAAC,0EAA0E,CAAC,CAAC;;AAE7F,KAAI,QAAQ,YAAA;KAAE,WAAW,GAAG,SAAS,CAAC,IAAI,EAAE,CAAC;;AAE7C,QAAO;AACN,iBAAe,EAAA,2BAAG;;;AAGjB,OAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;AAG/D,UAAO,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,EAAE,CAAC;GAC5C;;AAED,mBAAiB,EAAA,6BAAG;;;;;AAGnB,OAAI,QAAQ,GAAG,QAAQ,CACpB,GAAG,CAAC,UAAA,OAAO;WAAI,OAAO,OAAO,AAAC,KAAK,QAAQ,GAAG,CAAE,OAAO,CAAE,GAAG,OAAO,CAAC,YAAY;IAAA,CAAC,CACjF,MAAM,CAAC,UAAC,GAAG,EAAE,YAAY,EAAE,aAAa,EAAK;AAC7C,gBAAY,CAAC,OAAO,CAAC,UAAA,UAAU,EAAI;AAClC,SAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,SAAS,CAAC,GAAG,EAAE,CAAA,CAAE,GAAG,CAAC,aAAa,CAAC,CAAC;AACtE,QAAG,GAAG,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;KAC/B,CAAC,CAAC;AACH,WAAO,GAAG,CAAC;IACX,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;;;;AAItB,cAAW,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAC,eAAe,EAAE,OAAO,EAAK;AACxD,WAAO,SAAS,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,YAAM;;AAEvC,SAAM,SAAS,GAAG,eAAe,CAAC,MAAM,CAAC,UAAC,GAAG,EAAE,aAAa,EAAK;AAChE,aAAO,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA;MACvE,EAAE,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;;;AAGpB,WAAK,QAAQ,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,CAAC;KACpC,CAAC,CAAC;IACH,CAAC,CAAC,MAAM,EAAE,CAAC;GACZ;;AAED,sBAAoB,EAAA,gCAAG;;AAEtB,cAAW,CAAC,OAAO,CAAC,UAAA,UAAU;WAAI,UAAU,EAAE;IAAA,CAAC,CAAC;;;AAGhD,WAAQ,GAAG,IAAI,CAAC;GAChB;EACD,CAAC;CAEF,CAAC;;iBAEa,aAAa","file":"stateBindings.js","sourcesContent":["import Immutable from 'immutable'\nimport { dereference, reference } from './reference'\n\n/**\n * A React mixin to link state paths or Getters to a React state.\n *\n * @param bindingsFn\n * @returns {{getInitialState: Function, componentDidMount: Function, componentWillUnmount: Function}}\n */\nconst stateBindings = function(bindingsFn) {\n\tif (typeof(bindingsFn) != \"function\")\n\t\tthrow new Error(\"stateBindings needs to take a single function which returns the bindings\");\n\n\tlet bindings, unobservers = Immutable.List();\n\n\treturn {\n\t\tgetInitialState() {\n\t\t\t// Call the binding function to get the bindings (getInitialState should only be called once but put an explicit\n\t\t\t// test just in case).  Call the function in the context of the component.\n\t\t\tif (!bindings) bindings = Immutable.Map(bindingsFn.call(this));\n\n\t\t\t// Calculate and return the bindings\n\t\t\treturn bindings.map(dereference).toObject();\n\t\t},\n\n\t\tcomponentDidMount() {\n\t\t\t// This is a slightly confusing algorithm that gathers up the state properties that need to be updated per\n\t\t\t// path (so that we only need one observer per path).\n\t\t\tlet pathsMap = bindings\n\t\t\t\t\t.map(binding => typeof(binding) === \"string\" ? [ binding ] : binding.dependencies)\n\t\t\t\t\t.reduce((acc, dependencies, stateProperty) => {\n\t\t\t\t\t\tdependencies.forEach(dependency => {\n\t\t\t\t\t\t\tlet set = (acc.get(dependency) || Immutable.Set()).add(stateProperty);\n\t\t\t\t\t\t\tacc = acc.set(dependency, set);\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, Immutable.Map());\n\n\t\t\t// Observe each of the keyPaths\n\t\t\t// TODO: Check references are getting garbage collected (might need to use Reference#destroy() in componentWillUnmount)\n\t\t\tunobservers = pathsMap.map((stateProperties, keyPath) => {\n\t\t\t\treturn reference(keyPath).observe(() => {\n\t\t\t\t\t// I want to get a map of stateProperties to values to pass to setState\n\t\t\t\t\tconst newStates = stateProperties.reduce((acc, stateProperty) => {\n\t\t\t\t\t\treturn acc.set(stateProperty, dereference(bindings.get(stateProperty)))\n\t\t\t\t\t}, Immutable.Map());\n\n\t\t\t\t\t// React needs to the top level to be an object\n\t\t\t\t\tthis.setState(newStates.toObject());\n\t\t\t\t});\n\t\t\t}).toList();\n\t\t},\n\n\t\tcomponentWillUnmount() {\n\t\t\t// Stop observing keypaths\n\t\t\tunobservers.forEach(unobserver => unobserver());\n\n\t\t\t// Clear the bindings\n\t\t\tbindings = null;\n\t\t}\n\t};\n\n};\n\nexport default stateBindings"],"sourceRoot":"/source/"}